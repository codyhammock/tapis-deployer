--- # Test Yaml
services:
  - actors
  - admin
  - apps
  - authenticator
  - container-registry
  - elastic
  - files
  - jobs
  - meta
  - monitoring
  - notifications
  - pgrest
  - rabbitmq
  - security-kernel
  - skadmin
  - streams
  - systems
  - tenants-api
  - tokens-api
  - vault

universal-parameters:
  data:
    service_url: https://admin.develop.tapis.io
    service_tenant_id: admin
    service_site_id: tacc
    storge_class: rbd-new

actors:
  service-parameters:
      data:
        service_name: "actors"
  actors-config:
    file_ext: ".yml"
    template: actors-config.j2
    data:
      tenants:
        - "tacc"
        - "dev"
        - "admin"
      docker_network: "develop"
      log_file: true
      web_tenat_name: null
      mongo_tls: false
      log_ex: true
      object: "tenant"
  admin:
    file_ext: ".yml"
    template: admin.j2
    data:
      image_pull: null
  configmap:
    file_ext: ".yml"
    template: configmap.j2
    data:
      path: "develop"
      timeout: "60"
  events:
    file_ext: ".yml"
    template: events.j2
    data:
      image_pull: null
  mes:
    file_ext: ".yml"
    template: mes.j2
    data:
      image_pull: null
  mongo-pvc:
    file_ext: ".yml"
    template: "mongo-pvc.j2"
    data:
      
  mongo:
    file_ext: ".yml"
    template: "mongo.j2"
    data:
      init_database: null
  nginx-config:
    file_ext: ".yml"
    template: nginx-config.j2
    data:
      stage: dev
      proxy_set_header: true
  prometheus:
    file_ext: ".yml"
    template: "prometheus.j2"
    data:
      volume_mount: true
      volumes: true
  rabbitmq-pvc:
    file_ext: ".yml"
    template: "rabbitmq-pvc.j2"
    data:
      
  reg:
    file_ext: ".yml"
    template: "reg.j2"
    data:
      image_pull: null

admin: 
  service-parameters:
    data:
      service_name: "admin"
  admin-config:
    file_ext: ".yml"
    template: admin-config.j2
    data:

apps:
  service-parameters:
    data:
      service_name: "apps"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi" 
  postgres:
    apps-init-db:
      file_ext: ".yml"
      template: "apps-init-db.j2"
      data:
        monitor_password: true
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
    service:
      file_ext: ".yml"
      template: "service.j2"
      data:
        apps-external: true

authenticator:
  service-parameters:
    data:
      service_name: "authenticator"
  authenticator-config:
    file_ext: ".yml"
    template: authenticator-config.j2
    data:
      "tenants": ["dev", "tacc", "admin"]
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
  postgres:
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: dev
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        uncomment: false
      
container-registry:
  service-parameters:
    data:
      service_name: "container-registery"
  container-registery-config:
    file_ext: ".yml"
    template: "container-registery-config.j2"
    data:
      
elastic:
  service-parameters:
    data:
      service_name: "container-registery"
  elastic-config:
    file_ext: ".yml"
    template: "elastic-config.j2"
    data:

files:
  service-parameters:
    data:
      service_name: "files"
  file-config:
    file_ext: ".yml"
    template: "file-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      replicas: 1
      image_version: dev
      nodeSelector: "yes"
      memory: "8Gi"
      args: ["-Xdebug", 
             "-Xmx3g", 
             "-agentlib:jdwp=transport=dt_socket,server=y,address=*:8000,suspend=n", 
             "-cp", 
             "target/tapis-files.jar:target/dependencies/*", 
             "edu.utexas.tacc.tapis.files.api.FilesApplication"]
      site_id: true
      node_name: true
      files-debug: true
  configmap:
    file_ext: ".yml"
    template: "configmap.j2"
    data:
      log_leve: true
      rabbitmq_hostname: files-rabbitmq
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
  rabbitmq-pvc:
    file_ext: ".yml"
    template: "rabbitmq-pvc.j2"
    data:
      
  service:
    file_ext: ".yml"
    template: "service.j2"
    data:
      nodePort: 31451
  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: dev
      replicas: 1
      node_name: true
      memory: "8Gi"
      commands: [ "java",
                  "-Xmx3g", 
                  "-cp",
                  "target/tapis-files.jar:target/dependencies/*", 
                  "edu.utexas.tacc.tapis.files.lib.transfers.TransfersApp" ]

jobs:
  service-parameters:
    data:
      service_name: "jobs"
  jobs-config:
    file_ext: ".yml"
    template: "jobs-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
        node_selector: true
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  rabbitmq:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  readers:
    jobrdr-AltQueue:
      file_ext: ".yml"
      template: jobrdr-AltQueue.j2
      data:
        image_version: dev
        memory: "4Gi"
    jobrdr-DeadLetter:
      file_ext: ".yml"
      template: jobrdr-DeadLetter.j2
      data:
        image_version: dev
        memory: "4Gi"
    jobrdr-Recovery:
      file_ext: ".yml"
      template: jobrdr-Recovery.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
  workers:
    jobwkr-DefaultQueue:
      file_ext: ".yml"
      template: jobwkr-DefaultQueue.j2
      data:
        image_version: dev
        memory: "8Gi"
        node_name: true
        node_selector: true

meta:
  service-parameters:
    data:
      service_name: "meta"
  meta-config:
    file_ext: ".yml"
    template: "meta-config.j2"
    data:
      
  api:
    restheart-security:
      file_ext: ".yml"
      template: restheart-security.j2
      data:
        image_version: dev
        stage: develop
    restheart:
      file_ext: ".yml"
      template: restheart.j2
      data:
        image_version: dev
  backup:
    pbm:
      pbm:
        file_ext: ".yml"
        template: pbm.j2
        data:
    mongo-backup-claim0-pvc:
      file_ext: ".yaml"
      template: "mongo-backup-claim0-pvc.j2"
      data:
        
    mongo-backup-deployment:
      file_ext: ".yaml"
      template: mongo-backup-deployment.j2
      data:
        image_version: .1
  mongo:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
    sn-pvc:
      file_ext: ".yml"
      template: "sn-pvc.j2"
      data:
        

monitoring:
  service-parameters:
    data:
      service_name: "monitoring"     
  monitoring-config:
    file_ext: ".yml"
    template: "monitoring-config.j2"
    data:
      
  apps:
    elasticsearch:
      file_ext: ".yml"
      template: "elasticsearch.j2"
      data:
        max_buckets: true
        volume_mounts: true
        volumes: true
    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        args: true
  pvc:
    elasticsearch-data:
      file_ext: ".yml"
      template: "elasticsearch-data.j2"
      data:
  stren:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  init:
    file_ext: ".yml"
    template: "init.j2"
    data:
      
        
notifications:
  service-parameters:
    data:
      service_name: "notifications"
  notifications-config:
    file_ext: ".yml"
    template: "notifications-config.j2"
    data:
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: dev
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:

  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: dev
        
pgrest:
  service-parameters:
    data:
      service_name: "pgrest"   
  pgrest-config:
    file_ext: ".yml"
    template: "pgrest-config.j2"
    data:
           
  yml:
    api-deploy:
      file_ext: ".yml"
      template: api-deploy.j2
      data:
        image_version: dev
    postgres-pvc:
      file_ext: ".yml"
      template: "postgres-pvc.j2"
      data:

rabbitmq:
  service-parameters:
    data:
      service_name: "rabbitmq"
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
      
security-kernel:
  service-parameters:
    data:
      service_name: "security-kernel"
  security-kernal-config:
    file_ext: ".yml"
    template: "security-kernal-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "16Gi"
        auto_service: false
        renew_sk: something
        min: 3
        max: 3
        volumes: something
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
skadmin:
  service-parameters:
      data:
        service_name: "skadmin"
  skadmin-config:
    file_ext: ".yml"
    template: "skadmin-config.j2"
    data:
  initialLoad:
    tapis-monitoring-secrets:
      file_ext: ".json"
      template: tapis-monitoring-secrets.j2
      data:
        passwords: something
  renew-sk-secret:
     renew-sk-secret:
       file_ext: ".yml"
       template: "renew-sk-secret.j2"
       data:
         image_pull: Always
  sk-admin-init:
    file_ext: ".yml"
    template: sk-admin-init.j2
    data:
      image_version: dev
  updateSecrets:
    sk-admin-update:
      file_ext: ".yml"
      template: sk-admin-update.j2
      data:
        image_version: dev
  util:
    file_ext: ".yml"
    template: "util.j2"
    data:
      image_version: dev
  util3-job:
    file_ext: ".yml"
    template: util3-job.j2
    data:
      image_version: dev

streams:
  service-parameters:
    data:
      service_name: "streams"
      service_site_id: "user"
  streams-config:
    file_ext: ".yml"
    template: streams-config.j2
    data:
      "tenant": {
        "<tenant_id1>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"},
        "<tenant_id2>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"}
      }
      "log_level": "DEBUG"
      "show_traceback": false
  kapacitor-config:
    file_ext: ".yml"
    template: kapacitor-config.j2
    data:
      "tenant": {
        "<tenant_id1>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"},
        "<tenant_id2>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"}
      }
  api: 
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        noke_name: null
        process: 10
        threads: null
  influx:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  kapacitor:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
  mqsql:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
  
systems:
  service-parameters:
      data:
        service_name: "systems"
  systems-config:
    file_ext: ".yml"
    template: "systems-config.j2"
    data:
      
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        memory: "8Gi"
  postgres:
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
tenants-api:
  service-parameters:
    data:
      service_name: "tenants"
      service_site_id: "user"
  tenants-config:
    file_ext: ".yml"
    template: tenants-config.j2
    data:
      "postgres_user": "test_user"
      "log_level": "DEBUG"
      "show_traceback": false
      # "test_jwt": "optional"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: dev
        image_pull: Always
  postgres:
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: dev
        image_pull: Always
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        
tokens-api:
  service-parameters:
      data:
        service_name: "tokens"
  tokens-config:
    file_ext: ".yml"
    template: tokens-config.j2
    data:
      "use_sk": true
      "tenants": ["dev", "tacc", "admin"]
      "log_level": "DEBUG"
      "show_traceback": false
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: dev

vault: 
  service-parameters:
      data:
        service_name: "vault"
  vault-config:
    file_ext: ".yml"
    template: vault-config.j2
    data: 
  pvc:
    file_ext: ".yml"
    template: "pvc.j2"
    data:
  
    