--- # Test Yaml
services:
  - actors
  - admin
  - apps
  - authenticator
  - elastic
  - files
  - jobs
  - meta
  - monitoring
  - notifications
  - pgrest
  - rabbitmq
  - security-kernel
  - skadmin
  - streams
  - systems
  - tenants-api
  - tokens-api
  - vault

universal-parameters:
  data:
    service_url: https://admin.staging.tapis.io
    service_tenant_id: admin
    service_site_id: tacc

actors:
  service-parameters:
      data:
        service_name: "actors"
  actors-config:
    file_ext: ".yml"
    template: actors-config.j2
    data:
      tenants:
        - "admin"
        - "dev"
        - "tacc"
      docker_network: "staging"
      log_file: false
      web_tenat_name: NONE_TENANT
      mongo_tls: false
      log_ex: true
      object: "tenant"
  admin:
    file_ext: ".yml"
    template: admin.j2
    data:
      image_pull: null
  configmap:
    file_ext: ".yml"
    template: configmap.j2
    data:
      path: "staging"
      timeout: "60"
  events:
    file_ext: ".yml"
    template: events.j2
    data:
      image_pull: null
  mes:
    file_ext: ".yml"
    template: mes.j2
    data:
      image_pull: null
  mongo:
    file_ext: ".yml"
    template: "mongo.j2"
    data:
      init_database: null
  nginx-config:
    file_ext: ".yml"
    template: nginx-config.j2
    data:
      stage: stage
      proxy_set_header: true
  prometheus:
    file_ext: ".yml"
    template: "prometheus.j2"
    data:
      volume_mount: true
      volumes: true
  reg:
    file_ext: ".yml"
    template: "reg.j2"
    data:
      image_pull: null
      
admin: 
  service-parameters:
    data:
      service_name: "admin"
  # admin-config:
  #   file_ext: ".yml"
  #   template: admin-config.j2
  #   data:

apps:
  service-parameters:
    data:
      service_name: "apps"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: "8Gi" 
  postgres:
    apps-init-db:
      file_ext: ".yml"
      template: "apps-init-db.j2"
      data:
        monitor_password: false
    service:
      file_ext: ".yml"
      template: "service.j2"
      data:
        app-external: false

authenticator:
  service-parameters:
    data:
      service_name: "authenticator"
  authenticator-config:
    file_ext: ".yml"
    template: authenticator-config.j2
    data:
      "tenants": ["dev", "tacc", "admin"]
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
  postgres:
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: staging
    pvc:
      file_ext: ".yml"
      template: "pvc.j2"
      data:
        uncomment: true
      
files:
  service-parameters:
    data:
      service_name: "files"
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      replicas: 1
      image_version: staging
      nodeSelector: "yes"
      memory: "8Gi"
      args: ["-Xdebug",
             "-Xmx3g", 
             "-agentlib:jdwp=transport=dt_socket,server=y,address=*:8000,suspend=n", 
             "-cp",
             "target/tapis-files.jar:target/dependencies/*", 
             "edu.utexas.tacc.tapis.files.api.FilesApplication"]
      site_id: true
      node_name: true
      files-debug: true
  configmap:
    file_ext: ".yml"
    template: "configmap.j2"
    data:
      log_leve: false
      rabbitmq_hostname: files-rabbitmq
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  service:
    file_ext: ".yml"
    template: "service.j2"
    data:
      nodePort: 32039
  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: staging
      replicas: 1
      node_name: true
      memory: "8Gi"
      commands: [ "java",
                  "-Xmx3g", 
                  "-cp",
                  "target/tapis-files.jar:target/dependencies/*", 
                  "edu.utexas.tacc.tapis.files.lib.transfers.TransfersApp" ]

jobs:
  service-parameters:
    data:
      service_name: "jobs"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: null
        node_name: false
        node_selector: false
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: staging
        memory: null
  readers:
    jobrdr-AltQueue:
      file_ext: ".yml"
      template: jobrdr-AltQueue.j2
      data:
        image_version: staging
        memory: null
    jobrdr-DeadLetter:
      file_ext: ".yml"
      template: jobrdr-DeadLetter.j2
      data:
        image_version: staging
        memory: null
    jobrdr-Recovery:
      file_ext: ".yml"
      template: jobrdr-Recovery.j2
      data:
        image_version: staging
        memory: null
        node_name: false
  workers:
    jobwkr-DefaultQueue:
      file_ext: ".yml"
      template: jobwkr-DefaultQueue.j2
      data:
        image_version: staging
        memory: null
        node_name: false
        node_selector: false

meta:
  service-parameters:
    data:
      service_name: "meta"
  api:
    restheart-security:
      file_ext: ".yml"
      template: restheart-security.j2
      data:
        image_version: staging
        stage: null
    restheart:
      file_ext: ".yml"
      template: restheart.j2
      data:
        image_version: dev
  backup:
    pbm:
      pbm:
        file_ext: ".yml"
        template: pbm.j2
        data:
    mongo-backup-deployment:
      file_ext: ".yaml"
      template: mongo-backup-deployment.j2
      data:
        image_version: .1

monitoring:
  service-parameters:
    data:
      service_name: "monitoring"     
  apps:
    elasticsearch:
      file_ext: ".yml"
      template: "elasticsearch.j2"
      data:
        max_buckets: true
        volume_mounts: true
        volumes: true
    prometheus:
      file_ext: ".yml"
      template: "prometheus.j2"
      data:
        args: false

notifications:
  service-parameters:
    data:
      service_name: "notifications"
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: dev
  migrations:
    file_ext: ".yml"
    template: migrations.j2
    data:
      image_version: dev
  workers:
    file_ext: ".yml"
    template: workers.j2
    data:
      image_version: dev
        
pgrest:
  service-parameters:
    data:
      service_name: "pgrest"        
  yml:
    api-deploy:
      file_ext: ".yml"
      template: api-deploy.j2
      data:
        image_version: stage

security-kernel:
  service-parameters:
    data:
      service_name: "security-kernel"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: "16Gi"
        auto_service: false
        renew_sk: something
        min: 3
        max: 3
        volumes: something
    migrate:
      file_ext: ".yml"
      template: migrate.j2
      data:
        image_version: staging
        memory: null

skadmin:
  service-parameters:
      data:
        service_name: "skadmin"
  initialLoad:
    tapis-monitoring-secrets:
      file_ext: ".json"
      template: tapis-monitoring-secrets.j2
      data:
        passwords: something
  renew-sk-secret:
     renew-sk-secret:
       file_ext: ".yml"
       template: "renew-sk-secret.j2"
       data:
         image_pull: Always
  sk-admin-init:
    file_ext: ".yml"
    template: sk-admin-init.j2
    data:
      image_version: staging
  updateSecrets:
    sk-admin-update:
      file_ext: ".yml"
      template: sk-admin-update.j2
      data:
        image_version: dev
  util:
    file_ext: ".yml"
    template: "util.j2"
    data:
      image_version: staging
  util3-job:
    file_ext: ".yml"
    template: util3-job.j2
    data:
      image_version: latest

streams:
  service-parameters:
    data:
      service_name: "streams"
      service_site_id: "user"
  streams-config:
    file_ext: ".yml"
    template: streams-config.j2
    data:
        "tenant": {
          "<tenant_id1>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"},
          "<tenant_id2>":{"stream_db":"<db_name>","tapis_base_url":"<base_url>"}
        }
        "log_level": "DEBUG"
        "show_traceback": false
  api: 
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: "staging"
        node_name: "c04"
        process: 10
        threads: null

systems:
  service-parameters:
      data:
        service_name: "systems"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
        memory: "8Gi"

tenants-api:
  service-parameters:
    data:
      service_name: "tenants"
      service_site_id: "user"
  tenants-config:
    file_ext: ".yml"
    template: tenants-config.j2
    data:
      "postgres_user": "test_user"
      "log_level": "DEBUG"
      "show_traceback": false
      # "test_jwt": "optional"
  api:
    api:
      file_ext: ".yml"
      template: api.j2
      data:
        image_version: staging
    tmp:
      file_ext: ".yml"
      template: tmp.j2
      data:
        image_version: staging
  postgres:
    migrations-test:
      file_ext: ".yml"
      template: migrations-test.j2
      data:
        image_version: staging
    migrations:
      file_ext: ".yml"
      template: migrations.j2
      data:
        image_version: staging

tokens-api:
  service-parameters:
      data:
        service_name: "tokens"
  tokens-config:
    file_ext: ".yml"
    template: tokens-config.j2
    data:
      "use_sk": true
      "tenants": ["dev", "tacc", "admin"]
      "log_level": "DEBUG"
      "show_traceback": false
  api:
    file_ext: ".yml"
    template: api.j2
    data:
      image_version: staging

    